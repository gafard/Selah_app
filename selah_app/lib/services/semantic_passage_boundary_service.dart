/// üöÄ AP√îTRE - Service ultra-intelligent de fronti√®res s√©mantiques bibliques
/// 
/// Niveau : Ap√¥tre (Ultra-Intelligent) - Service de r√©f√©rence pour l'intelligence s√©mantique
/// 
/// Base de donn√©es exhaustive des unit√©s litt√©raires naturelles de la Bible
/// pour une lecture plus fluide et coh√©rente.
/// 
/// Bas√© sur :
/// - Structures litt√©raires bibliques (chiasmes, parall√©lismes, inclusions)
/// - Divisions canoniques traditionnelles
/// - Recherche ex√©g√©tique moderne
/// - Contexte liturgique et liturgie des heures
library;

/// R√©sultat d'un ajustement s√©mantique simple (par chapitres)
class AdjustedPassage {
  final String book;
  final int startChapter;
  final int startVerse;
  final int endChapter;
  final int endVerse;
  final bool adjusted;
  final String reference;
  final SemanticUnit? includedUnit;

  const AdjustedPassage({
    required this.book,
    required this.startChapter,
    required this.startVerse,
    required this.endChapter,
    required this.endVerse,
    required this.adjusted,
    required this.reference,
    this.includedUnit,
  });
}

/// Priorit√© d'une unit√© s√©mantique
enum UnitPriority {
  critical,  // Ne JAMAIS diviser (ex: Sermon sur la montagne)
  high,      // Fortement recommand√© de garder ensemble
  medium,    // Utile mais peut √™tre divis√© si n√©cessaire
  low,       // Suggestion faible
}

/// Unit√© s√©mantique biblique
class SemanticUnit {
  final String book;
  final int startChapter;
  final int endChapter;
  final String name;
  final UnitPriority priority;
  final String? theme;
  final String? liturgicalContext;
  final List<String>? emotionalTones;
  final String? annotation;
  
  const SemanticUnit({
    required this.book,
    required this.startChapter,
    required this.endChapter,
    required this.name,
    required this.priority,
    this.theme,
    this.liturgicalContext,
    this.emotionalTones,
    this.annotation,
  }) : assert(startChapter <= endChapter, 'startChapter ($startChapter) must be <= endChapter ($endChapter)');
  
  /// Nombre de chapitres dans cette unit√©
  int get length => endChapter - startChapter + 1;
  
  /// R√©f√©rence format√©e
  String get reference {
    if (startChapter == endChapter) {
      return '$book $startChapter';
    }
    return '$book $startChapter‚Äì$endChapter';
  }
}

/// Index chapitres ‚Üí unit√© pour lookup O(1)
class _UnitsIndex {
  final Map<String, Map<int, SemanticUnit>> _byBook = {};
  
  Map<int, SemanticUnit> forBook(String book) {
    final key = _normalizeBookName(book);
    if (!_byBook.containsKey(key)) {
      final map = <int, SemanticUnit>{};
      for (final u in SemanticPassageBoundaryService.getUnitsForBook(book)) {
        for (var c = u.startChapter; c <= u.endChapter; c++) {
          map[c] = u;
        }
      }
      _byBook[key] = map;
    }
    return _byBook[key]!;
  }
  
  /// Normalise les noms de livres pour √©viter les variations
  String _normalizeBookName(String book) {
    return book.trim().toLowerCase()
        .replaceAll('√©', 'e')
        .replaceAll('√®', 'e')
        .replaceAll('√™', 'e')
        .replaceAll('√†', 'a')
        .replaceAll('√ß', 'c');
  }
}

/// üöÄ Service de fronti√®res s√©mantiques - BASE DE DONN√âES EXHAUSTIVE
class SemanticPassageBoundaryService {
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üöÄ INDEX DE PERFORMANCE - LOOKUP O(1)
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static final _UnitsIndex _unitsIndex = _UnitsIndex();
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üìñ NOUVEAU TESTAMENT - √âVANGILES
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static const _matthieuUnits = [
    // Prologue et naissance
    SemanticUnit(
      book: 'Matthieu', startChapter: 1, endChapter: 2,
      name: 'Naissance du Roi',
      priority: UnitPriority.critical,
      theme: 'Incarnation',
      annotation: 'üëë Naissance du Roi promis',
      emotionalTones: ['wonder', 'anticipation', 'fulfillment'],
    ),
    
    // Minist√®re inaugural
    SemanticUnit(
      book: 'Matthieu', startChapter: 3, endChapter: 4,
      name: 'D√©but du minist√®re',
      priority: UnitPriority.high,
      theme: 'Mission',
      annotation: 'üî• Bapt√™me et tentation',
      emotionalTones: ['preparation', 'victory'],
    ),
    
    // SERMON SUR LA MONTAGNE - critique !
    SemanticUnit(
      book: 'Matthieu', startChapter: 5, endChapter: 7,
        name: 'Sermon sur la montagne',
      priority: UnitPriority.critical,
      theme: '√âthique du Royaume',
      liturgicalContext: 'Toussaint',
      annotation: '‚õ∞Ô∏è Les B√©atitudes et l\'√©thique du Royaume',
      emotionalTones: ['transformation', 'radical_love', 'kingdom_values'],
    ),
    
    // Miracles et autorit√©
    SemanticUnit(
      book: 'Matthieu', startChapter: 8, endChapter: 9,
      name: 'Dix miracles',
        priority: UnitPriority.high,
      theme: 'Autorit√© divine',
      annotation: '‚ú® La puissance du Roi',
      emotionalTones: ['awe', 'faith', 'healing'],
    ),
    
    // Discours missionnaire
    SemanticUnit(
      book: 'Matthieu', startChapter: 10, endChapter: 10,
      name: 'Envoi des Douze',
      priority: UnitPriority.high,
      theme: 'Mission',
      annotation: 'üöÄ Commission missionnaire',
      emotionalTones: ['courage', 'mission', 'sacrifice'],
    ),
    
    // Opposition croissante
    SemanticUnit(
      book: 'Matthieu', startChapter: 11, endChapter: 12,
      name: 'Questions et opposition',
        priority: UnitPriority.medium,
      theme: 'Conflit',
      annotation: '‚öîÔ∏è J√©sus face aux critiques',
      emotionalTones: ['tension', 'discernment'],
    ),
    
    // Paraboles du Royaume
    SemanticUnit(
      book: 'Matthieu', startChapter: 13, endChapter: 13,
      name: 'Paraboles du Royaume',
        priority: UnitPriority.critical,
      theme: 'Royaume de Dieu',
      annotation: 'üåæ Sept paraboles du Royaume',
      emotionalTones: ['mystery', 'revelation', 'growth'],
    ),
    
    // Minist√®re en Galil√©e (suite)
    SemanticUnit(
      book: 'Matthieu', startChapter: 14, endChapter: 17,
      name: 'Miracles et r√©v√©lation',
      priority: UnitPriority.medium,
      theme: 'Identit√© du Messie',
      annotation: '‚≠ê Qui est J√©sus ? Transfiguration',
      emotionalTones: ['revelation', 'glory', 'faith'],
    ),
    
    // Vie de la communaut√©
    SemanticUnit(
      book: 'Matthieu', startChapter: 18, endChapter: 18,
      name: 'Discours eccl√©sial',
      priority: UnitPriority.high,
      theme: '√âglise',
      annotation: '‚õ™ Vie dans la communaut√©',
      emotionalTones: ['humility', 'forgiveness', 'accountability'],
    ),
    
    // Route vers J√©rusalem
    SemanticUnit(
      book: 'Matthieu', startChapter: 19, endChapter: 23,
      name: 'Mont√©e √† J√©rusalem',
      priority: UnitPriority.medium,
      theme: 'Confrontation',
      annotation: 'üö∂ Vers la croix',
      emotionalTones: ['tension', 'urgency', 'warning'],
    ),
    
    // Discours eschatologique
    SemanticUnit(
      book: 'Matthieu', startChapter: 24, endChapter: 25,
      name: 'Discours sur la fin des temps',
        priority: UnitPriority.critical,
      theme: 'Eschatologie',
      annotation: '‚è∞ Veiller et √™tre pr√™t',
      emotionalTones: ['vigilance', 'hope', 'readiness'],
    ),
    
    // Passion et R√©surrection - TOUJOURS ensemble
    SemanticUnit(
      book: 'Matthieu', startChapter: 26, endChapter: 28,
      name: 'Passion et R√©surrection',
      priority: UnitPriority.critical,
      theme: 'R√©demption',
      liturgicalContext: 'Semaine Sainte + P√¢ques',
      annotation: '‚úùÔ∏è Mort et r√©surrection du Roi',
      emotionalTones: ['sorrow', 'sacrifice', 'victory', 'joy'],
    ),
  ];
  
  static const _marcUnits = [
    // D√©but du minist√®re (Marc commence direct)
    SemanticUnit(
      book: 'Marc', startChapter: 1, endChapter: 1,
      name: 'Commencement de l\'√âvangile',
      priority: UnitPriority.high,
      theme: 'Inauguration',
      annotation: '‚ö° J√©sus surgit avec puissance',
      emotionalTones: ['urgency', 'power', 'immediacy'],
    ),
    
    // Minist√®re en Galil√©e - miracles rapides
    SemanticUnit(
      book: 'Marc', startChapter: 2, endChapter: 5,
      name: 'Miracles en Galil√©e',
        priority: UnitPriority.medium,
      theme: 'Autorit√©',
      annotation: '‚ú® Le Serviteur en action',
      emotionalTones: ['power', 'compassion', 'faith'],
    ),
    
    // Mission des Douze
    SemanticUnit(
      book: 'Marc', startChapter: 6, endChapter: 8,
      name: 'Formation des disciples',
        priority: UnitPriority.medium,
      theme: 'Discipulat',
      annotation: 'üéì √âcole de la foi',
      emotionalTones: ['learning', 'growth', 'perseverance'],
    ),
    
    // R√©v√©lation de la croix
    SemanticUnit(
      book: 'Marc', startChapter: 8, endChapter: 10,
      name: 'Le chemin de la croix',
        priority: UnitPriority.high,
      theme: 'Sacrifice',
      annotation: '‚úùÔ∏è Trois annonces de la Passion',
      emotionalTones: ['sacrifice', 'cost', 'following'],
    ),
    
    // Minist√®re √† J√©rusalem
    SemanticUnit(
      book: 'Marc', startChapter: 11, endChapter: 13,
      name: 'Entr√©e et controverses',
      priority: UnitPriority.medium,
      theme: 'Confrontation',
      annotation: 'üå¥ Rameaux et enseignements finaux',
      emotionalTones: ['conflict', 'teaching', 'warning'],
    ),
    
    // Passion et R√©surrection
    SemanticUnit(
      book: 'Marc', startChapter: 14, endChapter: 16,
      name: 'Passion et R√©surrection',
        priority: UnitPriority.critical,
      theme: 'R√©demption',
      liturgicalContext: 'Semaine Sainte + P√¢ques',
      annotation: '‚úùÔ∏è Le Serviteur souffrant triomphe',
      emotionalTones: ['suffering', 'abandonment', 'victory', 'mission'],
    ),
  ];
  
  static const _lucUnits = [
    // Pr√©face et enfances
    SemanticUnit(
      book: 'Luc', startChapter: 1, endChapter: 2,
      name: 'Enfances de Jean et J√©sus',
        priority: UnitPriority.critical,
      theme: 'Incarnation',
      liturgicalContext: 'Avent + No√´l',
      annotation: 'üéÑ Magnificat et nativit√©',
      emotionalTones: ['joy', 'praise', 'wonder'],
    ),
    
    // D√©but du minist√®re
    SemanticUnit(
      book: 'Luc', startChapter: 3, endChapter: 4,
      name: 'Inauguration du minist√®re',
        priority: UnitPriority.high,
      theme: 'Mission',
      annotation: 'üî• Bapt√™me et mission √† Nazareth',
      emotionalTones: ['anointing', 'liberation', 'proclamation'],
    ),
    
    // Sermon dans la plaine
    SemanticUnit(
      book: 'Luc', startChapter: 6, endChapter: 6,
      name: 'Sermon dans la plaine',
        priority: UnitPriority.critical,
      theme: 'Compassion',
      annotation: 'üèîÔ∏è B√©atitudes et √©thique de l\'amour',
      emotionalTones: ['compassion', 'justice', 'mercy'],
    ),
    
    // Miracles et paraboles
    SemanticUnit(
      book: 'Luc', startChapter: 7, endChapter: 9,
      name: 'Compassion et r√©v√©lation',
      priority: UnitPriority.medium,
      theme: 'Mis√©ricorde',
      annotation: '‚ù§Ô∏è Le c≈ìur de J√©sus pour les perdus',
      emotionalTones: ['compassion', 'inclusion', 'healing'],
    ),
    
    // Mont√©e vers J√©rusalem (grande section propre √† Luc)
    SemanticUnit(
      book: 'Luc', startChapter: 9, endChapter: 19,
      name: 'Voyage vers J√©rusalem',
      priority: UnitPriority.high,
      theme: 'Discipulat',
      annotation: 'üö∂ Enseignements sur le chemin (paraboles uniques)',
      emotionalTones: ['teaching', 'perseverance', 'joy'],
    ),
    
    // Minist√®re √† J√©rusalem
    SemanticUnit(
      book: 'Luc', startChapter: 19, endChapter: 21,
      name: 'Entr√©e et enseignements',
      priority: UnitPriority.medium,
      theme: 'Autorit√©',
      annotation: 'üèõÔ∏è Dans le temple',
      emotionalTones: ['authority', 'warning'],
    ),
    
    // Passion et R√©surrection
    SemanticUnit(
      book: 'Luc', startChapter: 22, endChapter: 24,
      name: 'Passion et R√©surrection',
        priority: UnitPriority.critical,
      theme: 'R√©demption',
      liturgicalContext: 'Semaine Sainte + P√¢ques',
      annotation: '‚úùÔ∏è Le Sauveur du monde triomphe',
      emotionalTones: ['forgiveness', 'sacrifice', 'restoration', 'joy'],
    ),
  ];
  
  static const _jeanUnits = [
    // Prologue - JAMAIS diviser
    SemanticUnit(
      book: 'Jean', startChapter: 1, endChapter: 1,
      name: 'Prologue - Le Verbe',
      priority: UnitPriority.critical,
      theme: 'Incarnation',
      liturgicalContext: 'No√´l',
      annotation: '‚ú® Au commencement √©tait la Parole',
      emotionalTones: ['wonder', 'glory', 'light'],
    ),
    
    // Signes et dialogues (Livre des Signes - 7 signes)
    SemanticUnit(
      book: 'Jean', startChapter: 2, endChapter: 4,
      name: 'Premiers signes',
        priority: UnitPriority.high,
      theme: 'R√©v√©lation',
      annotation: 'üç∑ Cana, temple, Nicod√®me, Samaritaine',
      emotionalTones: ['transformation', 'new_life', 'living_water'],
    ),
    
    SemanticUnit(
      book: 'Jean', startChapter: 5, endChapter: 5,
      name: 'Le Fils √©gal au P√®re',
        priority: UnitPriority.high,
      theme: 'Christologie',
      annotation: '‚öñÔ∏è Autorit√© divine',
      emotionalTones: ['authority', 'identity'],
    ),
    
    // Pain de vie - CRITIQUE
    SemanticUnit(
      book: 'Jean', startChapter: 6, endChapter: 6,
      name: 'Pain de vie',
        priority: UnitPriority.critical,
      theme: 'Eucharistie',
      liturgicalContext: 'Corpus Christi',
      annotation: 'üçû Je suis le pain de vie',
      emotionalTones: ['sustenance', 'life', 'communion'],
    ),
    
    // F√™te des Tabernacles
    SemanticUnit(
      book: 'Jean', startChapter: 7, endChapter: 8,
      name: 'Lumi√®re du monde',
      priority: UnitPriority.high,
      theme: 'R√©v√©lation',
      annotation: 'üí° Je suis la lumi√®re du monde',
      emotionalTones: ['light', 'truth', 'freedom'],
    ),
    
    // Bon berger
    SemanticUnit(
      book: 'Jean', startChapter: 10, endChapter: 10,
      name: 'Le bon berger',
        priority: UnitPriority.critical,
      theme: 'Protection',
      liturgicalContext: 'Dimanche du Bon Pasteur',
      annotation: 'üêë Je suis le bon berger',
      emotionalTones: ['security', 'care', 'belonging'],
    ),
    
    // Lazare - signe supr√™me
    SemanticUnit(
      book: 'Jean', startChapter: 11, endChapter: 12,
      name: 'R√©surrection et royaut√©',
        priority: UnitPriority.high,
      theme: 'Vie',
      annotation: 'üåÖ Je suis la r√©surrection et la vie',
      emotionalTones: ['life', 'victory', 'worship'],
    ),
    
    // Discours d'adieu - CRITIQUE (testament spirituel)
    SemanticUnit(
      book: 'Jean', startChapter: 13, endChapter: 17,
      name: 'Discours d\'adieu',
        priority: UnitPriority.critical,
      theme: 'Intimit√©',
      annotation: 'üí¨ Testament de J√©sus (Lavement, Cep, Pri√®re sacerdotale)',
      emotionalTones: ['intimacy', 'love', 'unity', 'prayer'],
    ),
    
    // Passion et R√©surrection
    SemanticUnit(
      book: 'Jean', startChapter: 18, endChapter: 21,
      name: 'Passion, R√©surrection et envoi',
        priority: UnitPriority.critical,
      theme: 'Gloire',
      liturgicalContext: 'Semaine Sainte + P√¢ques',
      annotation: '‚úùÔ∏è L\'heure de la gloire - Je suis ressuscit√©',
      emotionalTones: ['glory', 'victory', 'mission', 'restoration'],
    ),
  ];
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üìñ PSAUMES - Structure liturgique et th√©matique
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static const _psaumesUnits = [
    // Introduction - Les deux voies
    SemanticUnit(
      book: 'Psaumes', startChapter: 1, endChapter: 2,
      name: 'Introduction - Les deux voies',
      priority: UnitPriority.critical,
      theme: 'Sagesse',
      annotation: 'üå≥ Bienheureux celui qui m√©dite',
      emotionalTones: ['meditation', 'choice', 'blessing'],
    ),
    
    // Psaumes de David - Livre I (lamentations et confiance)
    SemanticUnit(
      book: 'Psaumes', startChapter: 3, endChapter: 14,
      name: 'Lamentations et confiance',
      priority: UnitPriority.medium,
      theme: 'Confiance en Dieu',
      annotation: 'üõ°Ô∏è Dieu mon bouclier',
      emotionalTones: ['trust', 'protection', 'deliverance'],
    ),
    
    // Psaume 22-24 (Trilogie du Berger)
    SemanticUnit(
      book: 'Psaumes', startChapter: 22, endChapter: 24,
      name: 'Trilogie du Berger',
        priority: UnitPriority.critical,
      theme: 'Providence',
      annotation: 'üêë Souffrance, Bergerie, Roi de gloire',
      emotionalTones: ['suffering', 'care', 'glory'],
    ),
    
    // Psaumes de confiance
    SemanticUnit(
      book: 'Psaumes', startChapter: 42, endChapter: 43,
      name: 'Soif de Dieu',
      priority: UnitPriority.critical,
      theme: 'D√©sir de Dieu',
      annotation: 'üíß Comme une biche soupire',
      emotionalTones: ['longing', 'thirst', 'hope'],
    ),
    
    // Psaumes royaux
    SemanticUnit(
      book: 'Psaumes', startChapter: 44, endChapter: 51,
      name: 'Royaut√© et repentance',
      priority: UnitPriority.medium,
      theme: 'Royaut√© et confession',
      annotation: 'üëë Gloire du roi et repentir (Ps 51)',
      emotionalTones: ['glory', 'repentance', 'restoration'],
    ),
    
    // Psaumes de louange collective
    SemanticUnit(
      book: 'Psaumes', startChapter: 95, endChapter: 100,
      name: 'Louange universelle',
        priority: UnitPriority.high,
      theme: 'Adoration',
      annotation: 'üéµ Venez chantons √† l\'√âternel',
      emotionalTones: ['joy', 'celebration', 'worship'],
    ),
    
    // Psaume 119 - SEUL (acrostiche g√©ant)
    SemanticUnit(
      book: 'Psaumes', startChapter: 119, endChapter: 119,
      name: 'Amour de la Loi',
        priority: UnitPriority.critical,
      theme: 'Parole de Dieu',
      annotation: 'üìú M√©ditation g√©ante (176 versets)',
      emotionalTones: ['meditation', 'love_of_word', 'obedience'],
    ),
    
    // PSAUMES DE MONT√âE (p√®lerinage) - TOUJOURS ensemble
    SemanticUnit(
      book: 'Psaumes', startChapter: 120, endChapter: 134,
      name: 'Psaumes des mont√©es',
        priority: UnitPriority.critical,
      theme: 'P√®lerinage',
      liturgicalContext: 'P√®lerinages √† J√©rusalem',
      annotation: '‚õ∞Ô∏è Chants de p√®lerinage vers Sion',
      emotionalTones: ['journey', 'anticipation', 'community', 'worship'],
    ),
    
    // Hallel final - Explosion de louange
    SemanticUnit(
      book: 'Psaumes', startChapter: 146, endChapter: 150,
      name: 'Grand Hallel',
        priority: UnitPriority.critical,
      theme: 'Louange pure',
      annotation: 'üé∫ Que tout ce qui respire loue l\'√âternel !',
      emotionalTones: ['ecstasy', 'praise', 'glory', 'culmination'],
    ),
  ];
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üìñ LIVRES PAULINIENS
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static const _romainsUnits = [
    // Introduction th√©ologique
    SemanticUnit(
      book: 'Romains', startChapter: 1, endChapter: 3,
      name: 'Condamnation universelle',
        priority: UnitPriority.high,
      theme: 'P√©ch√©',
      annotation: '‚öñÔ∏è Tous ont p√©ch√©',
      emotionalTones: ['conviction', 'judgment', 'need'],
    ),
    
    // Justification par la foi - C≈íUR de Romains
    SemanticUnit(
      book: 'Romains', startChapter: 4, endChapter: 5,
      name: 'Justification par la foi',
      priority: UnitPriority.critical,
      theme: 'Salut',
      annotation: '‚úùÔ∏è Abraham et la gr√¢ce',
      emotionalTones: ['grace', 'faith', 'peace'],
    ),
    
    // Vie en Christ
    SemanticUnit(
      book: 'Romains', startChapter: 6, endChapter: 8,
      name: 'Vie dans l\'Esprit',
      priority: UnitPriority.critical,
      theme: 'Sanctification',
      annotation: 'üïäÔ∏è Plus de condamnation - L\'Esprit nous lib√®re',
      emotionalTones: ['freedom', 'life', 'hope', 'assurance'],
    ),
    
    // Isra√´l dans le plan de Dieu
    SemanticUnit(
      book: 'Romains', startChapter: 9, endChapter: 11,
      name: 'Le myst√®re d\'Isra√´l',
        priority: UnitPriority.high,
      theme: 'Souverainet√©',
      annotation: 'üåø L\'olivier franc et sauvage',
      emotionalTones: ['mystery', 'sovereignty', 'faithfulness'],
    ),
    
    // Application pratique
    SemanticUnit(
      book: 'Romains', startChapter: 12, endChapter: 16,
      name: 'Vie transform√©e',
      priority: UnitPriority.medium,
      theme: '√âthique',
      annotation: 'üî• Sacrifices vivants',
      emotionalTones: ['transformation', 'service', 'love'],
    ),
  ];
  
  static const _galatesUnits = [
    // D√©fense de l'√âvangile
    SemanticUnit(
      book: 'Galates', startChapter: 1, endChapter: 2,
      name: 'Un seul √âvangile',
        priority: UnitPriority.high,
      theme: 'Autorit√©',
      annotation: '‚ö° Anath√®me sur les faux √©vangiles',
      emotionalTones: ['urgency', 'defense', 'truth'],
    ),
    
    // Justification par la foi
    SemanticUnit(
      book: 'Galates', startChapter: 3, endChapter: 4,
      name: 'Libert√© en Christ',
      priority: UnitPriority.critical,
      theme: 'Gr√¢ce',
      annotation: 'üîì La loi √©tait un p√©dagogue',
      emotionalTones: ['freedom', 'grace', 'adoption'],
    ),
    
    // Vie par l'Esprit
    SemanticUnit(
      book: 'Galates', startChapter: 5, endChapter: 6,
      name: 'Fruit de l\'Esprit',
      priority: UnitPriority.critical,
      theme: 'Sanctification',
      annotation: 'üçá Marchez par l\'Esprit',
      emotionalTones: ['fruit', 'freedom', 'transformation'],
    ),
  ];
  
  static const _ephesiensUnits = [
    // Richesse en Christ
    SemanticUnit(
      book: '√âph√©siens', startChapter: 1, endChapter: 3,
      name: 'Richesse spirituelle',
      priority: UnitPriority.critical,
      theme: 'Identit√© en Christ',
      annotation: 'üíé B√©ni de toute b√©n√©diction',
      emotionalTones: ['blessing', 'identity', 'mystery'],
    ),
    
    // Vie pratique
    SemanticUnit(
      book: '√âph√©siens', startChapter: 4, endChapter: 6,
      name: 'Marche digne',
      priority: UnitPriority.high,
      theme: '√âthique',
      annotation: 'üõ°Ô∏è Armure de Dieu',
      emotionalTones: ['unity', 'purity', 'warfare'],
    ),
  ];
  
  static const _philippiensUnits = [
    // Joie dans l'√©preuve
    SemanticUnit(
      book: 'Philippiens', startChapter: 1, endChapter: 2,
      name: 'Hymne √† Christ',
      priority: UnitPriority.critical,
      theme: 'Joie et humilit√©',
      annotation: 'üòä R√©jouissez-vous + Hymne christologique',
      emotionalTones: ['joy', 'humility', 'unity'],
    ),
    
    // Course et prix
    SemanticUnit(
      book: 'Philippiens', startChapter: 3, endChapter: 4,
      name: 'Courir vers le but',
      priority: UnitPriority.high,
      theme: 'Pers√©v√©rance',
      annotation: 'üèÉ Je cours vers le but',
      emotionalTones: ['perseverance', 'joy', 'peace'],
    ),
  ];
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üìñ ANCIEN TESTAMENT
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static const _geneseUnits = [
    // Cr√©ation
    SemanticUnit(
      book: 'Gen√®se', startChapter: 1, endChapter: 2,
      name: 'Cr√©ation du monde',
      priority: UnitPriority.critical,
      theme: 'Cr√©ation',
      annotation: 'üåç Au commencement, Dieu cr√©a',
      emotionalTones: ['wonder', 'order', 'blessing'],
    ),
    
    // Chute
    SemanticUnit(
      book: 'Gen√®se', startChapter: 3, endChapter: 3,
      name: 'La chute',
      priority: UnitPriority.critical,
      theme: 'P√©ch√©',
      liturgicalContext: 'Car√™me',
      annotation: 'üçé Entr√©e du p√©ch√©',
      emotionalTones: ['temptation', 'shame', 'consequence', 'hope'],
    ),
    
    // D√©luge et alliance
    SemanticUnit(
      book: 'Gen√®se', startChapter: 6, endChapter: 9,
      name: 'No√© et le d√©luge',
      priority: UnitPriority.high,
      theme: 'Jugement et gr√¢ce',
      annotation: 'üåà Arc-en-ciel de l\'alliance',
      emotionalTones: ['judgment', 'salvation', 'covenant'],
    ),
    
    // Abraham - cycle complet
    SemanticUnit(
      book: 'Gen√®se', startChapter: 12, endChapter: 25,
      name: 'Abraham - P√®re de la foi',
      priority: UnitPriority.high,
      theme: 'Alliance',
      annotation: '‚≠ê Promesses √† Abraham',
      emotionalTones: ['faith', 'promise', 'obedience'],
    ),
    
    // Joseph - saga compl√®te
    SemanticUnit(
      book: 'Gen√®se', startChapter: 37, endChapter: 50,
      name: 'Joseph - Providence divine',
      priority: UnitPriority.high,
      theme: 'Providence',
      annotation: 'üëî Vous avez voulu me faire du mal, Dieu l\'a chang√© en bien',
      emotionalTones: ['suffering', 'perseverance', 'providence', 'forgiveness'],
    ),
  ];
  
  static const _exodeUnits = [
    // Oppression et appel de Mo√Øse
    SemanticUnit(
      book: 'Exode', startChapter: 1, endChapter: 4,
      name: 'Esclavage et appel',
      priority: UnitPriority.high,
      theme: 'Lib√©ration',
      annotation: 'üî• Buisson ardent',
      emotionalTones: ['oppression', 'calling', 'mission'],
    ),
    
    // Plaies et P√¢que
    SemanticUnit(
      book: 'Exode', startChapter: 7, endChapter: 12,
      name: 'Plaies et P√¢que',
      priority: UnitPriority.critical,
      theme: 'R√©demption',
      liturgicalContext: 'P√¢ques',
      annotation: 'ü©∏ Agneau pascal',
      emotionalTones: ['judgment', 'deliverance', 'remembrance'],
    ),
    
    // Mer Rouge et d√©sert
    SemanticUnit(
      book: 'Exode', startChapter: 13, endChapter: 18,
      name: 'Passage et voyage',
      priority: UnitPriority.high,
      theme: 'D√©livrance',
      annotation: 'üåä Travers√©e de la Mer Rouge',
      emotionalTones: ['deliverance', 'victory', 'provision'],
    ),
    
    // Alliance au Sina√Ø - CRITIQUE
    SemanticUnit(
      book: 'Exode', startChapter: 19, endChapter: 24,
      name: 'Alliance au Sina√Ø',
      priority: UnitPriority.critical,
      theme: 'Loi',
      annotation: '‚ö° Les Dix Commandements',
      emotionalTones: ['reverence', 'covenant', 'obedience'],
    ),
    
    // Tabernacle
    SemanticUnit(
      book: 'Exode', startChapter: 25, endChapter: 40,
      name: 'Construction du Tabernacle',
      priority: UnitPriority.medium,
      theme: 'Pr√©sence de Dieu',
      annotation: '‚õ∫ La gloire de Dieu habite',
      emotionalTones: ['worship', 'presence', 'holiness'],
    ),
  ];
  
  static const _proverbesUnits = [
    // Introduction
    SemanticUnit(
      book: 'Proverbes', startChapter: 1, endChapter: 9,
      name: 'Appel de la Sagesse',
      priority: UnitPriority.critical,
      theme: 'Sagesse',
      annotation: 'üìö La crainte de l\'√âternel est le commencement',
      emotionalTones: ['wisdom', 'instruction', 'discernment'],
    ),
    
    // Proverbes de Salomon (lecture quotidienne possible)
    SemanticUnit(
      book: 'Proverbes', startChapter: 10, endChapter: 29,
      name: 'Sagesse pratique',
      priority: UnitPriority.low, // Peut √™tre divis√© par chapitre/jour
      theme: 'Vie quotidienne',
      annotation: 'üí° Proverbes pour la vie',
      emotionalTones: ['practical_wisdom', 'discipline', 'righteousness'],
    ),
    
    // Conclusion
    SemanticUnit(
      book: 'Proverbes', startChapter: 30, endChapter: 31,
      name: 'Paroles d\'Agur et femme vaillante',
      priority: UnitPriority.high,
      theme: 'Sagesse culminante',
      annotation: 'üëë La femme vertueuse',
      emotionalTones: ['excellence', 'virtue', 'wisdom'],
    ),
  ];
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üó∫Ô∏è MAP COMPL√àTE DE TOUS LES LIVRES
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  static final Map<String, List<SemanticUnit>> _allBoundaries = {
    'Matthieu': _matthieuUnits,
    'Marc': _marcUnits,
    'Luc': _lucUnits,
    'Jean': _jeanUnits,
    'Psaumes': _psaumesUnits,
    'Romains': _romainsUnits,
    'Galates': _galatesUnits,
    '√âph√©siens': _ephesiensUnits,
    'Philippiens': _philippiensUnits,
    'Gen√®se': _geneseUnits,
    'Exode': _exodeUnits,
    'Proverbes': _proverbesUnits,
  };
  
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üß† API PUBLIQUE
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  /// R√©cup√®re toutes les unit√©s s√©mantiques pour un livre
  static List<SemanticUnit> getUnitsForBook(String book) {
    return _allBoundaries[book] ?? [];
  }
  
  /// Trouve l'unit√© s√©mantique contenant un chapitre donn√© (O(1) avec index)
  static SemanticUnit? findUnitContaining(String book, int chapter) {
    final index = _unitsIndex.forBook(book);
    return index[chapter];
  }
  
  /// üéØ Sugg√®re le meilleur d√©coupage pour une liste de chapitres
  /// selon le profil utilisateur et les priorit√©s s√©mantiques
  static List<SemanticUnit> suggestOptimalUnits({
    required String book,
    required int fromChapter,
    required int toChapter,
    UnitPriority? minPriority,
    List<String>? preferredThemes,
    String? liturgicalSeason,
  }) {
    final units = getUnitsForBook(book);
    final result = <SemanticUnit>[];
    
    for (final unit in units) {
      // V√©rifie si l'unit√© chevauche la plage demand√©e
      final overlaps = unit.startChapter <= toChapter && unit.endChapter >= fromChapter;
      if (!overlaps) continue;
      
      // Filtrer par priorit√© minimum
      if (minPriority != null) {
        final priorityIndex = UnitPriority.values.indexOf(unit.priority);
        final minPriorityIndex = UnitPriority.values.indexOf(minPriority);
        if (priorityIndex > minPriorityIndex) continue; // Priorit√© trop basse
      }
      
      // Filtrer par th√®me pr√©f√©r√©
      if (preferredThemes != null && unit.theme != null) {
        if (!preferredThemes.contains(unit.theme)) continue;
      }
      
      // Filtrer par saison liturgique
      if (liturgicalSeason != null && unit.liturgicalContext != null) {
        if (!unit.liturgicalContext!.toLowerCase().contains(liturgicalSeason.toLowerCase())) {
          continue;
        }
      }
      
      result.add(unit);
    }
    
    return result;
  }
  
  /// üß† Algorithme intelligent : D√©coupe une liste de chapitres en unit√©s optimales
  /// 
  /// Strat√©gie :
  /// 1. Privil√©gier les unit√©s CRITICAL/HIGH qui tombent dans la plage
  /// 2. Compl√©ter avec des chapitres individuels pour les zones non couvertes
  /// 3. Adapter selon le profil utilisateur (d√©butant = unit√©s plus courtes)
  static List<String> splitIntoOptimalReadings({
    required String book,
    required int startChapter,
    required int endChapter,
    required int targetReadings, // Nombre de lectures souhait√©es
    String? userLevel, // Pour ajuster la taille
  }) {
    final units = getUnitsForBook(book);
    final readings = <String>[];
    
    int currentChapter = startChapter;
    
    while (currentChapter <= endChapter && readings.length < targetReadings) {
      // Chercher une unit√© s√©mantique qui commence ici
      SemanticUnit? matchingUnit;
      
      for (final unit in units) {
        if (unit.startChapter == currentChapter && 
            unit.endChapter <= endChapter &&
            (unit.priority == UnitPriority.critical || unit.priority == UnitPriority.high)) {
          matchingUnit = unit;
          break;
        }
      }
      
      if (matchingUnit != null) {
        // Utiliser l'unit√© s√©mantique
        readings.add(matchingUnit.reference);
        currentChapter = matchingUnit.endChapter + 1;
      } else {
        // Chapitre individuel
        readings.add('$book $currentChapter');
        currentChapter++;
      }
    }
    
    return readings;
  }
  
  /// üé® R√©cup√®re l'annotation la plus pertinente pour un chapitre
  static String? getAnnotationForChapter(String book, int chapter) {
    final unit = findUnitContaining(book, chapter);
    return unit?.annotation;
  }
  
  /// üé≠ R√©cup√®re les tons √©motionnels pour un passage
  static List<String> getEmotionalTonesForChapter(String book, int chapter) {
    final unit = findUnitContaining(book, chapter);
    return unit?.emotionalTones ?? [];
  }
  
  /// üìÖ Filtre les unit√©s par saison liturgique
  static List<SemanticUnit> getUnitsForLiturgicalSeason(String season) {
    final result = <SemanticUnit>[];
    
    for (final units in _allBoundaries.values) {
      for (final unit in units) {
        if (unit.liturgicalContext?.toLowerCase().contains(season.toLowerCase()) ?? false) {
          result.add(unit);
        }
      }
    }
    
    return result;
  }
  
  /// üéØ Trouve les unit√©s les plus pertinentes pour un th√®me
  static List<SemanticUnit> getUnitsForTheme(String theme) {
    final result = <SemanticUnit>[];
    
    for (final units in _allBoundaries.values) {
      for (final unit in units) {
        if (unit.theme?.toLowerCase().contains(theme.toLowerCase()) ?? false) {
          result.add(unit);
        }
      }
    }
    
    // Trier par priorit√©
    result.sort((a, b) {
      final aPriority = UnitPriority.values.indexOf(a.priority);
      final bPriority = UnitPriority.values.indexOf(b.priority);
      return aPriority.compareTo(bPriority);
    });
    
    return result;
  }
  
  /// üéØ Ajuste un passage [startChapter..endChapter] pour √©viter de couper
  /// des unit√©s CRITICAL/HIGH. Granularit√© chapitre.
  static AdjustedPassage adjustPassageVerses({
    required String book,
    required int startChapter,
    required int endChapter,
  }) {
    final units = getUnitsForBook(book);
    final originalStart = startChapter;
    final originalEnd = endChapter;

    if (startChapter > endChapter) {
      // garde un fallback sain
      final tmp = startChapter;
      startChapter = endChapter;
      endChapter = tmp;
    }

    // √âtape 1 : si le passage coupe une unit√© CRITICAL/HIGH, on "snap"
    for (final u in units) {
      final cutsUnit = (startChapter <= u.endChapter) && (endChapter >= u.startChapter);
      if (!cutsUnit) continue;

      final isCriticalOrHigh = u.priority == UnitPriority.critical || u.priority == UnitPriority.high;

      if (isCriticalOrHigh) {
        // √âtendre les bornes pour englober l'unit√© enti√®re (strat√©gie conservative)
        startChapter = _mathMin(startChapter, u.startChapter);
        endChapter   = _mathMax(endChapter,   u.endChapter);
      }
    }

    // √âtape 2 : optionnel ‚Äî "snap" doux si on tombe juste √† +/‚àí1 d'une fronti√®re
    bool adjusted = (startChapter != originalStart) || (endChapter != originalEnd);

    // Trouver une unit√© majoritaire incluse (pour annotation)
    SemanticUnit? best;
    int bestOverlap = -1;
    for (final u in units) {
      final overlap = _overlapLen(startChapter, endChapter, u.startChapter, u.endChapter);
      if (overlap > bestOverlap) {
        best = u;
        bestOverlap = overlap;
      }
    }

    final ref = (startChapter == endChapter)
        ? '$book $startChapter'
        : '$book $startChapter‚Äì$endChapter';

    return AdjustedPassage(
      book: book,
      startChapter: startChapter,
      startVerse: 1,
      endChapter: endChapter,
      endVerse: 999, // signale "fin de chapitre" ; remplace par verseCount si dispo
      adjusted: adjusted,
      reference: ref,
      includedUnit: best,
    );
  }

  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  // üîß HELPERS INTERNES
  // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  
  /// Calcule la longueur d'overlap entre deux plages
  static int _overlapLen(int a1, int a2, int b1, int b2) {
    final s = _mathMax(a1, b1);
    final e = _mathMin(a2, b2);
    return (e >= s) ? (e - s + 1) : 0;
  }
  
  /// Math.min sans import dart:math
  static int _mathMin(int a, int b) => (a < b) ? a : b;
  
  /// Math.max sans import dart:math
  static int _mathMax(int a, int b) => (a > b) ? a : b;

  /// üìä Statistiques de couverture
  static Map<String, dynamic> getStatistics() {
    int totalUnits = 0;
    int criticalUnits = 0;
    int highUnits = 0;
    
    for (final units in _allBoundaries.values) {
      totalUnits += units.length;
      criticalUnits += units.where((u) => u.priority == UnitPriority.critical).length;
      highUnits += units.where((u) => u.priority == UnitPriority.high).length;
    }
    
    return {
      'total_books': _allBoundaries.length,
      'total_units': totalUnits,
      'critical_units': criticalUnits,
      'high_priority_units': highUnits,
      'coverage': '${_allBoundaries.length} livres avec fronti√®res s√©mantiques',
      'performance': 'Index O(1) activ√© pour lookup rapide',
    };
  }
}
