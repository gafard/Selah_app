import 'dart:math';
import 'package:flutter/material.dart';

/// Sortie attendue par PayerpageWidget :
/// [{ 'theme': 'Repentance', 'subject': 'Demander un c≈ìur pur' }, ...]
typedef PrayerSubject = Map<String, String>;

class PrayerItem {
  final String theme;
  final String subject;
  final Color color;
  bool validated;
  String notes; // Notes de ce que l'utilisateur re√ßoit de Dieu
  PrayerItem({
    required this.theme,
    required this.subject,
    required this.color,
    this.validated = false,
    this.notes = '',
  });

  factory PrayerItem.fromMap(Map m) {
    Color parseHex(String hex) {
      final h = (hex as String).replaceAll('#', '');
      return Color(int.parse('FF$h', radix: 16));
    }
    return PrayerItem(
      theme: m['theme'] ?? '',
      subject: m['subject'] ?? '',
      color: m['color'] != null ? parseHex(m['color']) : const Color(0xFF6366F1),
    );
  }
}

/// Helper pour cr√©er des sujets de pri√®re bas√©s sur les r√©ponses de m√©ditation
List<PrayerItem> buildPrayerItemsFromMeditation({
  required Map<String, Set<String>> selectedTagsByField,
  required Map<String, Set<String>> selectedAnswersByField, // Les r√©ponses coch√©es
  required Map<String, String> freeTextResponses, // Les r√©ponses √©crites
  String? passageText,
  String? passageRef,
}) {
  final items = <PrayerItem>[];
  
  // Analyser les r√©ponses pour cr√©er des sujets personnalis√©s
  final responses = _analyzeMeditationResponses(
    selectedTagsByField, 
    selectedAnswersByField,
    freeTextResponses,
    passageText,
    passageRef
  );
  
  // Cr√©er des sujets de pri√®re bas√©s sur l'analyse
  for (final response in responses) {
    items.add(PrayerItem(
      theme: response['theme']!,
      subject: response['subject']!,
      color: response['color']!,
    ));
  }
  
  // Si pas assez de sujets, ajouter des sujets par d√©faut
  if (items.length < 3) {
    items.addAll(_getDefaultPrayerItems(passageRef));
  }
  
  return items.take(5).toList(); // Maximum 5 sujets
}

/// Analyse les r√©ponses de m√©ditation pour cr√©er des sujets personnalis√©s
List<Map<String, dynamic>> _analyzeMeditationResponses(
  Map<String, Set<String>> selectedTagsByField,
  Map<String, Set<String>> selectedAnswersByField,
  Map<String, String> freeTextResponses,
  String? passageText,
  String? passageRef,
) {
  final responses = <Map<String, dynamic>>[];
  
  // Analyser chaque champ de r√©ponse avec le contexte complet
  selectedTagsByField.forEach((field, tags) {
    if (tags.isNotEmpty) {
      final selectedAnswers = selectedAnswersByField[field] ?? <String>{};
      final freeText = freeTextResponses[field] ?? '';
      
      final analysis = _analyzeFieldWithContext(
        field, 
        tags, 
        selectedAnswers, 
        freeText, 
        passageText, 
        passageRef
      );
      if (analysis != null) {
        responses.add(analysis);
      }
    }
  });
  
  return responses;
}

/// Analyse un champ avec le contexte complet (tags, r√©ponses, texte libre, passage)
Map<String, dynamic>? _analyzeFieldWithContext(
  String field,
  Set<String> tags,
  Set<String> selectedAnswers,
  String freeText,
  String? passageText,
  String? passageRef,
) {
  // Cr√©er un sujet de pri√®re bas√© sur le contexte complet
  final context = _buildContextualSubject(field, tags, selectedAnswers, freeText, passageText, passageRef);
  return context;
}

/// Construit un sujet de pri√®re contextuel bas√© sur tous les √©l√©ments
Map<String, dynamic>? _buildContextualSubject(
  String field,
  Set<String> tags,
  Set<String> selectedAnswers,
  String freeText,
  String? passageText,
  String? passageRef,
) {
  // D√©terminer le th√®me principal bas√© sur les tags
  String theme = 'Pri√®re';
  Color color = const Color(0xFF6366F1);
  
  if (tags.contains('praise') || tags.contains('gratitude')) {
    theme = 'Louange';
    color = const Color(0xFFFF6B6B);
  } else if (tags.contains('repentance') || tags.contains('warning')) {
    theme = 'Repentance';
    color = const Color(0xFF8E44AD);
  } else if (tags.contains('trust') || tags.contains('promise')) {
    theme = 'Foi';
    color = const Color(0xFF54A0FF);
  } else if (tags.contains('obedience') || tags.contains('responsibility')) {
    theme = 'Ob√©issance';
    color = const Color(0xFFF39C12);
  } else if (tags.contains('intercession')) {
    theme = 'Intercession';
    color = const Color(0xFF96CEB4);
  } else if (tags.contains('guidance')) {
    theme = 'Sagesse';
    color = const Color(0xFF9B59B6);
  }
  
  // Construire le sujet bas√© sur le contexte
  String subject = _buildSubjectFromContext(field, selectedAnswers, freeText, passageText, passageRef);
  
  return {
    'theme': theme,
    'subject': subject,
    'color': color,
  };
}

/// Construit le sujet de pri√®re √† partir du contexte
String _buildSubjectFromContext(
  String field,
  Set<String> selectedAnswers,
  String freeText,
  String? passageText,
  String? passageRef,
) {
  // Utiliser les r√©ponses s√©lectionn√©es et le texte libre pour cr√©er un sujet personnalis√©
  final answers = selectedAnswers.join(', ');
  final context = freeText.isNotEmpty ? freeText : answers;
  
  // V√©rifier que les r√©ponses s√©lectionn√©es sont bien prises en compte
  print('üîç ANALYSE CONTEXTE pour $field:');
  print('üîç R√©ponses coch√©es: $selectedAnswers');
  print('üîç Texte libre: "$freeText"');
  print('üîç Contexte final: "$context"');
  
  // Cr√©er une synth√®se intelligente bas√©e sur le champ, les r√©ponses et le passage
  final subject = _createIntelligentPrayerSubject(field, context, passageText, passageRef);
  
  print('üîç Sujet g√©n√©r√©: "$subject"');
  return subject;
}

/// Cr√©e un sujet de pri√®re intelligent et personnalis√©
String _createIntelligentPrayerSubject(
  String field,
  String context,
  String? passageText,
  String? passageRef,
) {
  // Analyser le contexte pour extraire des √©l√©ments cl√©s
  final contextLower = context.toLowerCase();
  final passageLower = passageText?.toLowerCase() ?? '';
  
  // Analyser le passage pour comprendre son contexte th√©matique
  final passageAnalysis = _analyzePassageContext(passageText, passageRef);
  
  switch (field) {
    case 'de_quoi_qui':
      return _createSubjectAboutPassageContent(context, passageLower, passageAnalysis);
    
    case 'apprend_dieu':
      return _createSubjectAboutGodRevelation(context, passageLower, passageAnalysis);
    
    case 'exemple':
      return _createSubjectAboutExample(context, passageLower, passageAnalysis);
    
    case 'ordre':
      return _createSubjectAboutCommand(context, passageLower, passageAnalysis);
    
    case 'promesse':
      return _createSubjectAboutPromise(context, passageLower, passageAnalysis);
    
    case 'avertissement':
      return _createSubjectAboutWarning(context, passageLower, passageAnalysis);
    
    case 'commande':
      return _createSubjectAboutCommand(context, passageLower, passageAnalysis);
    
    case 'personnage_principal':
      return _createSubjectAboutMainCharacter(context, passageLower, passageAnalysis);
    
    case 'emotion':
      return _createSubjectAboutEmotion(context, passageLower, passageAnalysis);
    
    case 'application':
      return _createSubjectAboutApplication(context, passageLower, passageAnalysis);
    
    default:
      return 'Seigneur, aide-moi √† comprendre et appliquer ce passage dans ma vie';
  }
}

/// Analyse le contexte du passage pour comprendre ses th√®mes principaux
Map<String, dynamic> _analyzePassageContext(String? passageText, String? passageRef) {
  final passage = passageText?.toLowerCase() ?? '';
  final analysis = <String, dynamic>{};
  
  // Analyser les th√®mes principaux du passage
  if (passage.contains('je suis le chemin') || passage.contains('chemin, la v√©rit√©')) {
    analysis['main_theme'] = 'jesus_way';
    analysis['key_concept'] = 'J√©sus comme chemin vers le P√®re';
  }
  
  if (passage.contains('demeures') || passage.contains('maison de mon p√®re')) {
    analysis['main_theme'] = 'heavenly_home';
    analysis['key_concept'] = 'Promesse du ciel et des demeures c√©lestes';
  }
  
  if (passage.contains('consolateur') || passage.contains('esprit de v√©rit√©')) {
    analysis['main_theme'] = 'holy_spirit';
    analysis['key_concept'] = 'Promesse du Saint-Esprit';
  }
  
  if (passage.contains('croyez en dieu') || passage.contains('croyez en moi')) {
    analysis['main_theme'] = 'faith_trust';
    analysis['key_concept'] = 'Appel √† la foi et √† la confiance';
  }
  
  if (passage.contains('≈ìuvres') || passage.contains('faire les ≈ìuvres')) {
    analysis['main_theme'] = 'works_service';
    analysis['key_concept'] = 'Appel √† faire les ≈ìuvres de Dieu';
  }
  
  if (passage.contains('demanderez en mon nom')) {
    analysis['main_theme'] = 'prayer_power';
    analysis['key_concept'] = 'Puissance de la pri√®re au nom de J√©sus';
  }
  
  if (passage.contains('gardez mes commandements')) {
    analysis['main_theme'] = 'obedience';
    analysis['key_concept'] = 'Appel √† l\'ob√©issance et √† l\'amour';
  }
  
  // Analyser les personnages mentionn√©s
  if (passage.contains('thomas') || passage.contains('philippe')) {
    analysis['characters'] = ['Thomas', 'Philippe'];
  }
  
  // Analyser les √©motions et sentiments
  if (passage.contains('c≈ìur ne se trouble')) {
    analysis['emotion'] = 'peace_comfort';
  }
  
  if (passage.contains('orphelins')) {
    analysis['emotion'] = 'abandonment_fear';
  }
  
  return analysis;
}

/// Cr√©e un sujet de pri√®re sur le contenu du passage
String _createSubjectAboutPassageContent(String context, String passage, Map<String, dynamic> passageAnalysis) {
  final mainTheme = passageAnalysis['main_theme'] as String?;
  final keyConcept = passageAnalysis['key_concept'] as String?;
  
  // V√©rifier que les r√©ponses s√©lectionn√©es sont bien prises en compte
  final contextLower = context.toLowerCase();
  
  // Combiner l'analyse du passage avec les r√©ponses sp√©cifiques
  if (contextLower.contains('j√©sus') || contextLower.contains('christ')) {
    if (mainTheme == 'jesus_way') {
      return 'Seigneur J√©sus, comme il est √©crit "Je suis le chemin, la v√©rit√©, et la vie", aide-moi √† te suivre fid√®lement.';
    }
    return 'Seigneur J√©sus, merci de te r√©v√©ler dans ce passage. Aide-moi √† mieux te conna√Ætre et √† te suivre fid√®lement.';
  }
  
  if (contextLower.contains('royaume') || contextLower.contains('ciel') || mainTheme == 'heavenly_home') {
    return 'P√®re c√©leste, comme il est √©crit "Il y a plusieurs demeures dans la maison de mon P√®re", aide-moi √† vivre en citoyen du ciel.';
  }
  
  if (contextLower.contains('esprit') || contextLower.contains('consolateur') || mainTheme == 'holy_spirit') {
    return 'Esprit Saint, comme il est √©crit "Je prierai le P√®re, et il vous donnera un autre consolateur", aide-moi √† √™tre sensible √† ta voix.';
  }
  
  if (mainTheme == 'faith_trust') {
    return 'Seigneur, comme il est √©crit "Croyez en Dieu, et croyez en moi", renforce ma foi dans les moments difficiles.';
  }
  
  return 'Seigneur, aide-moi √† comprendre ce que tu veux me dire √† travers ce passage.';
}

/// Cr√©e un sujet de pri√®re sur la r√©v√©lation de Dieu
String _createSubjectAboutGodRevelation(String context, String passage, Map<String, dynamic> passageAnalysis) {
  final mainTheme = passageAnalysis['main_theme'] as String?;
  
  // Bas√© sur l'analyse du passage Jean 14
  if (mainTheme == 'jesus_way') {
    return 'P√®re, merci de r√©v√©ler J√©sus comme le chemin vers toi. Aide-moi √† comprendre que nul ne vient √† toi que par lui.';
  }
  
  if (mainTheme == 'holy_spirit') {
    return 'P√®re, merci de promettre l\'Esprit de v√©rit√©. Aide-moi √† recevoir ce consolateur et √† √™tre sensible √† sa voix.';
  }
  
  if (context.contains('saint') || context.contains('pur')) {
    return 'Dieu saint, aide-moi √† vivre dans la saintet√© comme tu es saint. Purifie mon c≈ìur et mes pens√©es.';
  }
  
  if (context.contains('puissant') || context.contains('majest√©')) {
    return 'Dieu tout-puissant, je reconnais ta majest√©. Aide-moi √† t\'adorer avec crainte et respect.';
  }
  
  return 'P√®re, r√©v√®le-toi davantage √† moi √† travers ce passage. Aide-moi √† mieux te conna√Ætre et √† t\'aimer.';
}

/// Cr√©e un sujet de pri√®re sur l'exemple √† suivre
String _createSubjectAboutExample(String context, String passage, Map<String, dynamic> passageAnalysis) {
  if (context.contains('foi') || context.contains('croire')) {
    return 'Seigneur, aide-moi √† avoir une foi ferme comme l\'exemple de ce passage. Renforce ma confiance en toi.';
  }
  if (context.contains('amour') || context.contains('aimer')) {
    return 'J√©sus, aide-moi √† aimer comme tu aimes. Donne-moi un c≈ìur rempli d\'amour pour Dieu et pour mon prochain.';
  }
  if (context.contains('ob√©issance') || context.contains('ob√©ir')) {
    return 'Seigneur, aide-moi √† ob√©ir √† tes commandements avec joie, comme l\'exemple de ce passage.';
  }
  if (context.contains('repentance') || context.contains('repentir')) {
    return 'P√®re, aide-moi √† me repentir sinc√®rement de mes p√©ch√©s et √† revenir √† toi.';
  }
  return 'Seigneur, aide-moi √† suivre les bons exemples de ce passage et √† √©viter les mauvais.';
}

/// Cr√©e un sujet de pri√®re sur les commandements/ordres
String _createSubjectAboutCommand(String context, String passage, Map<String, dynamic> passageAnalysis) {
  final mainTheme = passageAnalysis['main_theme'] as String?;
  final contextLower = context.toLowerCase();
  
  // Bas√© sur l'analyse du passage Jean 14 avec r√©f√©rences scripturaires
  if (mainTheme == 'obedience' || contextLower.contains('garder') || contextLower.contains('commandements')) {
    return 'J√©sus, comme il est √©crit "Si vous m\'aimez, gardez mes commandements", aide-moi √† t\'aimer par l\'ob√©issance.';
  }
  
  if (mainTheme == 'works_service' || contextLower.contains('≈ìuvres')) {
    return 'Seigneur, comme il est √©crit "Celui qui croit en moi fera aussi les ≈ìuvres que je fais", aide-moi √† te servir fid√®lement.';
  }
  
  if (contextLower.contains('croyez en dieu') || contextLower.contains('croyez en moi')) {
    return 'Seigneur, comme il est √©crit "Croyez en Dieu, et croyez en moi", renforce ma foi en toi.';
  }
  
  if (contextLower.contains('c≈ìur ne se trouble')) {
    return 'J√©sus, comme il est √©crit "Que votre c≈ìur ne se trouble point", donne-moi ta paix.';
  }
  
  if (contextLower.contains('prier') || contextLower.contains('m√©diter')) {
    return 'P√®re, aide-moi √† prier et m√©diter ta Parole r√©guli√®rement. Approfondis ma relation avec toi.';
  }
  
  return 'Seigneur, aide-moi √† ob√©ir √† tes commandements avec joie et pers√©v√©rance.';
}

/// Cr√©e un sujet de pri√®re sur les promesses
String _createSubjectAboutPromise(String context, String passage, Map<String, dynamic> passageAnalysis) {
  final mainTheme = passageAnalysis['main_theme'] as String?;
  final contextLower = context.toLowerCase();
  
  // Bas√© sur l'analyse du passage Jean 14 avec r√©f√©rences scripturaires
  if (mainTheme == 'heavenly_home' || contextLower.contains('demeures') || contextLower.contains('maison')) {
    return 'J√©sus, comme il est √©crit "Je vais vous pr√©parer une place", aide-moi √† vivre dans l\'esp√©rance de ton retour.';
  }
  
  if (mainTheme == 'holy_spirit' || contextLower.contains('consolateur') || contextLower.contains('esprit de v√©rit√©')) {
    return 'P√®re, comme il est √©crit "Je prierai le P√®re, et il vous donnera un autre consolateur", aide-moi √† recevoir l\'Esprit de v√©rit√©.';
  }
  
  if (contextLower.contains('orphelins') || contextLower.contains('viendrai √† vous')) {
    return 'J√©sus, comme il est √©crit "Je ne vous laisserai pas orphelins, je viendrai √† vous", aide-moi √† sentir ta pr√©sence constante.';
  }
  
  if (contextLower.contains('demanderez en mon nom') || mainTheme == 'prayer_power') {
    return 'J√©sus, comme il est √©crit "Tout ce que vous demanderez en mon nom, je le ferai", aide-moi √† prier selon ta volont√©.';
  }
  
  if (contextLower.contains('≈ìuvres') && contextLower.contains('plus grandes')) {
    return 'Seigneur, comme il est √©crit "Celui qui croit en moi fera aussi les ≈ìuvres que je fais, et il en fera de plus grandes", aide-moi √† te servir.';
  }
  
  return 'P√®re, aide-moi √† recevoir tes promesses avec foi et √† les vivre pleinement.';
}

/// Cr√©e un sujet de pri√®re sur les avertissements
String _createSubjectAboutWarning(String context, String passage, Map<String, dynamic> passageAnalysis) {
  if (context.contains('p√©ch√©') || context.contains('faute')) {
    return 'Seigneur, aide-moi √† fuir le p√©ch√© et √† vivre dans la justice. Donne-moi la force de r√©sister √† la tentation.';
  }
  if (context.contains('orgueil') || context.contains('fier')) {
    return 'P√®re, garde-moi de l\'orgueil. Aide-moi √† rester humble et d√©pendant de toi.';
  }
  if (context.contains('idol√¢trie') || context.contains('idole')) {
    return 'Seigneur, aide-moi √† ne rien mettre avant toi. Tu es le seul digne de mon adoration.';
  }
  if (context.contains('jugement') || context.contains('condamnation')) {
    return 'Dieu, aide-moi √† me repentir avant qu\'il ne soit trop tard. Donne-moi un c≈ìur sensible √† tes avertissements.';
  }
  return 'P√®re, aide-moi √† prendre au s√©rieux tes avertissements et √† changer ce qui doit l\'√™tre.';
}

/// Cr√©e un sujet de pri√®re sur le personnage principal
String _createSubjectAboutMainCharacter(String context, String passage, Map<String, dynamic> passageAnalysis) {
  if (context.contains('j√©sus') || context.contains('christ')) {
    return 'Seigneur J√©sus, merci d\'√™tre le centre de ce passage. Aide-moi √† te suivre de plus en plus fid√®lement.';
  }
  if (context.contains('√©ternel') || context.contains('dieu')) {
    return 'P√®re √©ternel, merci de te r√©v√©ler dans ce passage. Aide-moi √† mieux te conna√Ætre et t\'adorer.';
  }
  if (context.contains('esprit') || context.contains('saint-esprit')) {
    return 'Esprit Saint, aide-moi √† √™tre sensible √† ta voix et √† te laisser me transformer.';
  }
  return 'Seigneur, aide-moi √† comprendre le r√¥le du personnage principal et √† l\'imiter dans ma vie.';
}

/// Cr√©e un sujet de pri√®re sur les √©motions
String _createSubjectAboutEmotion(String context, String passage, Map<String, dynamic> passageAnalysis) {
  if (context.contains('joie') || context.contains('all√©gresse')) {
    return 'Seigneur, aide-moi √† vivre dans la joie de ton salut. Donne-moi un c≈ìur reconnaissant et joyeux.';
  }
  if (context.contains('paix') || context.contains('s√©r√©nit√©')) {
    return 'J√©sus, donne-moi ta paix qui surpasse toute intelligence. Aide-moi √† rester calme dans les √©preuves.';
  }
  if (context.contains('crainte') || context.contains('respect')) {
    return 'P√®re, aide-moi √† t\'adorer avec crainte et respect. Donne-moi un c≈ìur qui te r√©v√®re.';
  }
  if (context.contains('amour') || context.contains('tendresse')) {
    return 'Dieu d\'amour, aide-moi √† aimer comme tu aimes. Donne-moi un c≈ìur rempli de tendresse.';
  }
  return 'Seigneur, aide-moi √† cultiver les bonnes √©motions et √† les exprimer de mani√®re saine.';
}

/// Cr√©e un sujet de pri√®re sur l'application pratique
String _createSubjectAboutApplication(String context, String passage, Map<String, dynamic> passageAnalysis) {
  if (context.contains('aujourd\'hui') || context.contains('maintenant')) {
    return 'Seigneur, aide-moi √† appliquer ce passage d√®s aujourd\'hui. Donne-moi la force de changer.';
  }
  if (context.contains('quotidien') || context.contains('vie')) {
    return 'P√®re, aide-moi √† vivre ce passage dans ma vie quotidienne. Transforme mes habitudes.';
  }
  if (context.contains('famille') || context.contains('proche')) {
    return 'Seigneur, aide-moi √† partager ces v√©rit√©s avec ma famille et mes proches.';
  }
  if (context.contains('travail') || context.contains('service')) {
    return 'Dieu, aide-moi √† honorer ce passage dans mon travail et mon service.';
  }
  return 'Seigneur, aide-moi √† mettre en pratique ce passage concr√®tement dans ma vie.';
}

/// Analyse un champ sp√©cifique de m√©ditation
Map<String, dynamic>? _analyzeField(String field, Set<String> tags, String? passageText) {
  switch (field) {
    // Champs de la m√©ditation QCM
    case 'de_quoi_qui':
      return _analyzeDeQuoiQui(tags, passageText);
    case 'apprend_dieu':
      return _analyzeApprendDieu(tags, passageText);
    case 'exemple':
      return _analyzeExemple(tags, passageText);
    case 'ordre':
      return _analyzeOrdre(tags, passageText);
    case 'promesse':
      return _analyzePromesse(tags, passageText);
    case 'avertissement':
      return _analyzeAvertissement(tags, passageText);
    case 'commande':
      return _analyzeCommande(tags, passageText);
    case 'personnage_principal':
      return _analyzePersonnagePrincipal(tags, passageText);
    case 'emotion':
      return _analyzeEmotion(tags, passageText);
    case 'application':
      return _analyzeApplication(tags, passageText);
    
    // Champs de la m√©ditation libre
    case 'aboutGod':
      return _analyzeAboutGod(tags, passageText);
    case 'neighbor':
      return _analyzeNeighbor(tags, passageText);
    case 'applyToday':
      return _analyzeApplyToday(tags, passageText);
    case 'verseHit':
      return _analyzeVerseHit(tags, passageText);
    default:
      return _analyzeGenericField(field, tags, passageText);
  }
}

/// Analyse les r√©ponses sur Dieu
Map<String, dynamic>? _analyzeAboutGod(Set<String> tags, String? passageText) {
  if (tags.contains('praise') || tags.contains('gratitude')) {
    return {
      'theme': 'Louange',
      'subject': _generatePersonalPraiseSubject(tags, passageText),
      'color': const Color(0xFFFF6B6B),
    };
  }
  if (tags.contains('trust') || tags.contains('faith')) {
    return {
      'theme': 'Foi',
      'subject': _generateTrustSubject(tags, passageText),
      'color': const Color(0xFF54A0FF),
    };
  }
  return null;
}

/// Analyse les r√©ponses sur le prochain
Map<String, dynamic>? _analyzeNeighbor(Set<String> tags, String? passageText) {
  if (tags.contains('intercession') || tags.contains('love')) {
    return {
      'theme': 'Intercession',
      'subject': _generateIntercessionSubject(tags, passageText),
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse les r√©ponses sur l'application
Map<String, dynamic>? _analyzeApplyToday(Set<String> tags, String? passageText) {
  if (tags.contains('obedience') || tags.contains('action')) {
    return {
      'theme': 'Ob√©issance',
      'subject': _generateObedienceSubject(tags, passageText),
      'color': const Color(0xFFFECA57),
    };
  }
  if (tags.contains('repentance') || tags.contains('change')) {
    return {
      'theme': 'Repentance',
      'subject': _generateRepentanceSubject(tags, passageText),
      'color': const Color(0xFF45B7D1),
    };
  }
  return null;
}

/// Analyse les versets qui ont touch√©
Map<String, dynamic>? _analyzeVerseHit(Set<String> tags, String? passageText) {
  if (tags.contains('promise') || tags.contains('hope')) {
    return {
      'theme': 'Promesse',
      'subject': _generatePromiseSubject(tags, passageText),
      'color': const Color(0xFF9B59B6),
    };
  }
  return null;
}

/// Analyse g√©n√©rique pour d'autres champs
Map<String, dynamic>? _analyzeGenericField(String field, Set<String> tags, String? passageText) {
  // Logique g√©n√©rique bas√©e sur les tags
  if (tags.contains('praise')) {
    return {
      'theme': 'Louange',
      'subject': 'Adorer Dieu pour ce qu\'il m\'a r√©v√©l√© dans ma m√©ditation',
      'color': const Color(0xFFFF6B6B),
    };
  }
  if (tags.contains('gratitude')) {
    return {
      'theme': 'Action de gr√¢ce',
      'subject': 'Remercier Dieu pour ses bienfaits dans ma vie',
      'color': const Color(0xFF54A0FF),
    };
  }
  return null;
}

/// G√©n√®re un sujet de louange personnalis√©
String _generatePersonalPraiseSubject(Set<String> tags, String? passageText) {
  if (tags.contains('praise') && tags.contains('gratitude')) {
    return 'Adorer Dieu pour sa bont√© et sa fid√©lit√© r√©v√©l√©es dans ce passage';
  } else if (tags.contains('praise')) {
    return 'Exalter Dieu pour sa grandeur manifest√©e dans ma m√©ditation';
  } else {
    return 'Remercier Dieu pour ses bienfaits dans ma vie';
  }
}

/// G√©n√®re un sujet de foi personnalis√©
String _generateTrustSubject(Set<String> tags, String? passageText) {
  if (tags.contains('trust') && tags.contains('faith')) {
    return 'Renforcer ma confiance en Dieu face aux d√©fis actuels';
  } else {
    return 'Demander une foi plus ferme en Dieu';
  }
}

/// G√©n√®re un sujet d'intercession personnalis√©
String _generateIntercessionSubject(Set<String> tags, String? passageText) {
  if (tags.contains('intercession') && tags.contains('love')) {
    return 'Prier pour mes proches qui ont besoin de conna√Ætre Dieu';
  } else {
    return 'Interc√©der pour ceux qui souffrent autour de moi';
  }
}

/// G√©n√®re un sujet d'ob√©issance personnalis√©
String _generateObedienceSubject(Set<String> tags, String? passageText) {
  if (tags.contains('obedience') && tags.contains('action')) {
    return 'Mettre en pratique concr√®tement ce que j\'ai appris';
  } else {
    return 'Demander la force d\'ob√©ir √† Dieu dans ma vie quotidienne';
  }
}

/// G√©n√®re un sujet de repentance personnalis√©
String _generateRepentanceSubject(Set<String> tags, String? passageText) {
  if (tags.contains('repentance') && tags.contains('change')) {
    return 'Demander pardon et la force de changer mes mauvaises habitudes';
  } else {
    return 'Reconna√Ætre mes fautes et demander le pardon de Dieu';
  }
}

/// G√©n√®re un sujet de promesse personnalis√©
String _generatePromiseSubject(Set<String> tags, String? passageText) {
  if (tags.contains('promise') && tags.contains('hope')) {
    return 'S\'appuyer sur les promesses de Dieu pour l\'avenir';
  } else {
    return 'Croire aux promesses de Dieu pour ma vie';
  }
}

/// Sujets de pri√®re par d√©faut si pas assez de r√©ponses
List<PrayerItem> _getDefaultPrayerItems(String? passageRef) {
  return [
    PrayerItem(
      theme: 'Louange',
      subject: 'Adorer Dieu pour sa Parole r√©v√©l√©e',
      color: const Color(0xFFFF6B6B),
    ),
    PrayerItem(
      theme: 'Sagesse',
      subject: 'Demander la compr√©hension de ce passage',
      color: const Color(0xFF54A0FF),
    ),
    PrayerItem(
      theme: 'Ob√©issance',
      subject: 'Mettre en pratique ce que j\'ai appris',
      color: const Color(0xFF96CEB4),
    ),
  ];
}

/// Helper pour mapper les tags vers des items de pri√®re avec couleurs (ancienne m√©thode)
List<PrayerItem> buildPrayerItemsFromTags(Set<String> tags) {
  final items = <PrayerItem>[];
  
  // Mapping des tags vers des th√®mes et sujets sp√©cifiques
  final tagMapping = {
    // Tags de louange et gratitude
    'praise': {'theme': 'Louange', 'subject': 'Adorer Dieu pour sa grandeur r√©v√©l√©e dans ce passage'},
    'gratitude': {'theme': 'Action de gr√¢ce', 'subject': 'Remercier Dieu pour ses bienfaits mentionn√©s'},
    
    // Tags de repentance et ob√©issance
    'repentance': {'theme': 'Repentance', 'subject': 'Demander pardon pour mes manquements'},
    'obedience': {'theme': 'Ob√©issance', 'subject': 'Mettre en pratique les enseignements de ce passage'},
    'responsibility': {'theme': 'Responsabilit√©', 'subject': 'Prendre mes responsabilit√©s au s√©rieux'},
    
    // Tags d'intercession et de foi
    'intercession': {'theme': 'Intercession', 'subject': 'Prier pour ceux qui ont besoin d\'entendre ce message'},
    'trust': {'theme': 'Foi', 'subject': 'Renforcer ma confiance en Dieu face aux d√©fis'},
    
    // Tags de guidance et promesses
    'guidance': {'theme': 'Sagesse', 'subject': 'Demander la direction divine pour ma vie'},
    'promise': {'theme': 'Promesse', 'subject': 'S\'appuyer sur les promesses de Dieu r√©v√©l√©es ici'},
    'hope': {'theme': 'Esp√©rance', 'subject': 'Cultiver l\'esp√©rance face aux difficult√©s'},
    
    // Tags d'avertissement et de vigilance
    'warning': {'theme': 'Vigilance', 'subject': 'Rester vigilant face aux avertissements donn√©s'},
    'awe': {'theme': 'Crainte', 'subject': 'Reverence devant la saintet√© de Dieu'},
  };
  
  // Couleurs pour chaque th√®me
  final themeColors = {
    'Louange': const Color(0xFFFF6B6B),
    'Action de gr√¢ce': const Color(0xFF4ECDC4),
    'Repentance': const Color(0xFF45B7D1),
    'Ob√©issance': const Color(0xFF96CEB4),
    'Responsabilit√©': const Color(0xFF6C5CE7),
    'Intercession': const Color(0xFFFECA57),
    'Foi': const Color(0xFFFF9FF3),
    'Sagesse': const Color(0xFF54A0FF),
    'Promesse': const Color(0xFF5F27CD),
    'Esp√©rance': const Color(0xFF00B894),
    'Vigilance': const Color(0xFFFF6348),
    'Crainte': const Color(0xFF2D3436),
  };
  
  // Convertir les tags en items
  for (final tag in tags) {
    if (tagMapping.containsKey(tag)) {
      final mapping = tagMapping[tag]!;
      final theme = mapping['theme'] as String;
      final color = themeColors[theme] ?? const Color(0xFF6366F1);
      
      items.add(PrayerItem(
        theme: theme,
        subject: mapping['subject'] as String,
        color: color,
      ));
    }
  }
  
  // Si aucun tag valide, ajouter des items par d√©faut bas√©s sur la m√©ditation
  if (items.isEmpty) {
    items.addAll([
      PrayerItem(
        theme: 'Louange',
        subject: 'Adorer Dieu pour sa Parole r√©v√©l√©e',
        color: const Color(0xFFFF6B6B),
      ),
      PrayerItem(
        theme: 'Sagesse',
        subject: 'Demander la compr√©hension de ce passage',
        color: const Color(0xFF54A0FF),
      ),
      PrayerItem(
        theme: 'Ob√©issance',
        subject: 'Mettre en pratique ce que j\'ai appris',
        color: const Color(0xFF96CEB4),
      ),
    ]);
  }
  
  return items;
}

List<PrayerSubject> buildPrayerSubjectsFromMeditation({
  String mode = 'free', // 'free' | 'qcm'
  Map<String, List<String>>? qcmAnswers,     // MeditationQcmPage
  Map<String, String>? freeAnswers,          // MeditationFreePage
}) {
  final subjects = <PrayerSubject>[];

  if (mode == 'qcm' && qcmAnswers != null) {
    subjects.addAll(_fromQcm(qcmAnswers));
  } else if (mode == 'free' && freeAnswers != null) {
    subjects.addAll(_fromFree(freeAnswers));
  }

  // Nettoyage: d√©dupliquer, couper les sujets trop longs
  String clamp(String s) => s.length <= 120 ? s : '${s.substring(0, 117)}‚Ä¶';

  final seen = <String>{};
  final out = <PrayerSubject>[];
  for (final item in subjects) {
    final key = '${item['theme']}|${item['subject']}';
    if (seen.add(key)) {
      out.add({'theme': item['theme']!, 'subject': clamp(item['subject']!)});
    }
  }

  // On limite √† 8‚Äì10 cartes pour rester lisible
  return out.take(10).toList();
}

/// R√®gles simples bas√©es sur les libell√©s des options coch√©es (pas d'IA).
List<PrayerSubject> _fromQcm(Map<String, List<String>> answers) {
  final out = <PrayerSubject>[];

  // Helpers
  void add(String theme, String subject) =>
      out.add({'theme': theme, 'subject': subject});

  bool anyContains(List<String>? list, List<String> needles) {
    if (list == null) return false;
    final joined = list.join(' ').toLowerCase();
    return needles.any((n) => joined.contains(n.toLowerCase()));
  }

  // topic / aboutGod / commands / promise / warning / apply...
  final topic      = answers['topic'];
  final aboutGod   = answers['aboutGod'];
  final commands   = answers['commands'];
  final promise    = answers['promise'];
  final warning    = answers['warning'];
  final apply      = answers['apply'];

  // 1) Action de gr√¢ce / Louange si Dieu, amour, fid√©lit√©, caract√®re
  if (anyContains(aboutGod, ['amour', 'fid√©lit√©', 'gr√¢ce', 'mis√©ricorde', 'bienveillance', 'caract√®re']) ||
      anyContains(topic, ['Dieu'])) {
    add('Action de gr√¢ce', "Remercier Dieu pour son caract√®re et sa bont√© r√©v√©l√©s aujourd'hui");
    add('Louange', "Adorer Dieu pour ce qu'il est, tel qu'aper√ßu dans le passage");
  }

  // 2) Ob√©issance si un ordre a √©t√© coch√©
  if (anyContains(commands, ['Oui'])) {
    add('Ob√©issance', "Mettre en pratique concr√®tement l'appel du texte aujourd'hui");
  }

  // 3) Promesse / Foi si promesse coch√©e
  if (anyContains(promise, ['Oui'])) {
    add('Foi', "M'approprier la promesse lue et m'y appuyer dans la semaine");
    add('Promesse', "Rappeler cette promesse dans la pri√®re et la proclamer avec foi");
  }

  // 4) Repentance si avertissement / exemple √† √©viter / justice/saintet√©
  if (anyContains(warning, ['Oui']) ||
      anyContains(topic, ['√©viter']) ||
      anyContains(aboutGod, ['justice', 'saintet√©'])) {
    add('Repentance', "Reconna√Ætre et abandonner une attitude/une habitude signal√©e par le texte");
  }

  // 5) Intercession si "prochain", "√©glise", "ville", etc. apparaissent
  if (anyContains(topic, ['prochain']) ||
      anyContains(apply, ['interc√©der']) ||
      anyContains(aboutGod, ['direction']) // souvent li√© √† prier pour d'autres
     ) {
    add('Intercession', "Prier pour une personne pr√©cise concern√©e par ce que j'ai lu");
  }

  // 6) Sagesse / Guidance si "direction / sagesse / d√©cision"
  if (anyContains(aboutGod, ['sagesse', 'direction']) ||
      anyContains(apply, ['sagesse'])) {
    add('Sagesse', "Demander la sagesse et la direction de Dieu dans mes d√©cisions");
  }

  // 7) Paix / Confiance si "confiance, peur, inqui√©tude"
  if (anyContains(apply, ['croire', 'confiance', 'paix']) ||
      anyContains(aboutGod, ['confiance'])) {
    add('Paix', "Recevoir la paix et la confiance au milieu de l'incertitude");
  }

  // 8) S'il y a une r√©ponse libre dans certaines questions, on les transforme
  answers.forEach((qid, list) {
    for (final v in list) {
      if (v.trim().isEmpty) continue;
      if (qid == 'apply')      add('Ob√©issance', 'Mettre en ≈ìuvre: $v');
      if (qid == 'warning')    add('Repentance', 'Prendre au s√©rieux: $v');
      if (qid == 'promise')    add('Promesse', 'Se rappeler: $v');
      if (qid == 'aboutGod')   add('Action de gr√¢ce', 'Remercier pour: $v');
    }
  });

  return out;
}

/// D√©ductions douces √† partir des champs libres.
/// Pas d'interpr√©tation : on range ce que l'utilisateur a √©crit.
List<PrayerSubject> _fromFree(Map<String, String> free) {
  final out = <PrayerSubject>[];
  void add(String theme, String subject) =>
      out.add({'theme': theme, 'subject': subject});

  final aboutGod   = (free['aboutGod'] ?? '').trim();
  final neighbor   = (free['neighbor'] ?? '').trim();
  final apply      = (free['applyToday'] ?? '').trim();
  final memory     = (free['memoryVerse'] ?? '').trim();

  if (aboutGod.isNotEmpty) {
    add('Action de gr√¢ce', "Remercier Dieu pour: $aboutGod");
    add('Louange', "Adorer Dieu tel qu'entrevu: $aboutGod");
  }
  if (neighbor.isNotEmpty) {
    add('Intercession', "Porter dans la pri√®re: $neighbor");
  }
  if (apply.isNotEmpty) {
    add('Ob√©issance', "Mettre en pratique aujourd'hui: $apply");
  }
  if (memory.isNotEmpty) {
    add('Foi', "M√©diter et proclamer: $memory");
    add('Promesse', "Garder ce verset comme appui: $memory");
  }

  return out;
}

// ===== NOUVELLES FONCTIONS D'ANALYSE POUR LA QCM =====

/// Analyse "De quoi/qui parle ce passage ?"
Map<String, dynamic>? _analyzeDeQuoiQui(Set<String> tags, String? passageText) {
  if (tags.contains('praise') || tags.contains('gratitude')) {
    return {
      'theme': 'Louange',
      'subject': 'Adorer Dieu pour ce qu\'il r√©v√®le dans ce passage',
      'color': const Color(0xFFFF6B6B),
    };
  }
  if (tags.contains('trust') || tags.contains('promise')) {
    return {
      'theme': 'Foi',
      'subject': 'Placer ma confiance en Dieu selon ce passage',
      'color': const Color(0xFF54A0FF),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour ceux mentionn√©s dans ce passage',
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse "Qu'apprends-je sur Dieu ?"
Map<String, dynamic>? _analyzeApprendDieu(Set<String> tags, String? passageText) {
  if (tags.contains('repentance') || tags.contains('warning')) {
    return {
      'theme': 'Repentance',
      'subject': 'Demander pardon pour mes p√©ch√©s r√©v√©l√©s par ce passage',
      'color': const Color(0xFF8E44AD),
    };
  }
  if (tags.contains('praise') || tags.contains('awe')) {
    return {
      'theme': 'Louange',
      'subject': 'Adorer Dieu pour ses attributs r√©v√©l√©s dans ce passage',
      'color': const Color(0xFFFF6B6B),
    };
  }
  if (tags.contains('trust') || tags.contains('promise')) {
    return {
      'theme': 'Foi',
      'subject': 'Renforcer ma foi en Dieu selon ce passage',
      'color': const Color(0xFF54A0FF),
    };
  }
  return null;
}

/// Analyse "Y a-t-il un exemple √† suivre ?"
Map<String, dynamic>? _analyzeExemple(Set<String> tags, String? passageText) {
  if (tags.contains('obedience') || tags.contains('responsibility')) {
    return {
      'theme': 'Ob√©issance',
      'subject': 'Demander la force de suivre l\'exemple de ce passage',
      'color': const Color(0xFFF39C12),
    };
  }
  return null;
}

/// Analyse "Y a-t-il un ordre/commandement ?"
Map<String, dynamic>? _analyzeOrdre(Set<String> tags, String? passageText) {
  if (tags.contains('obedience') || tags.contains('responsibility')) {
    return {
      'theme': 'Ob√©issance',
      'subject': 'Demander la force d\'ob√©ir aux commandements de ce passage',
      'color': const Color(0xFFF39C12),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour que d\'autres ob√©issent aux commandements de ce passage',
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse "Y a-t-il une promesse ?"
Map<String, dynamic>? _analyzePromesse(Set<String> tags, String? passageText) {
  if (tags.contains('promise') || tags.contains('trust')) {
    return {
      'theme': 'Foi',
      'subject': 'Recevoir avec foi les promesses de ce passage',
      'color': const Color(0xFF54A0FF),
    };
  }
  if (tags.contains('gratitude')) {
    return {
      'theme': 'Gratitude',
      'subject': 'Remercier Dieu pour ses promesses dans ce passage',
      'color': const Color(0xFF2ECC71),
    };
  }
  return null;
}

/// Analyse "Y a-t-il un avertissement ?"
Map<String, dynamic>? _analyzeAvertissement(Set<String> tags, String? passageText) {
  if (tags.contains('warning') || tags.contains('repentance')) {
    return {
      'theme': 'Repentance',
      'subject': 'Me repentir selon les avertissements de ce passage',
      'color': const Color(0xFF8E44AD),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour que d\'autres √©coutent les avertissements de ce passage',
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse "Y a-t-il une commande ?"
Map<String, dynamic>? _analyzeCommande(Set<String> tags, String? passageText) {
  if (tags.contains('obedience')) {
    return {
      'theme': 'Ob√©issance',
      'subject': 'Demander la force d\'accomplir les commandements de ce passage',
      'color': const Color(0xFFF39C12),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour que d\'autres accomplissent les commandements de ce passage',
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse "Qui est le personnage principal ?"
Map<String, dynamic>? _analyzePersonnagePrincipal(Set<String> tags, String? passageText) {
  if (tags.contains('praise') || tags.contains('trust')) {
    return {
      'theme': 'Louange',
      'subject': 'Adorer Dieu pour le personnage principal de ce passage',
      'color': const Color(0xFFFF6B6B),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour ceux qui suivent l\'exemple du personnage principal',
      'color': const Color(0xFF96CEB4),
    };
  }
  return null;
}

/// Analyse "Quelle √©motion ressens-tu ?"
Map<String, dynamic>? _analyzeEmotion(Set<String> tags, String? passageText) {
  if (tags.contains('praise') || tags.contains('gratitude')) {
    return {
      'theme': 'Gratitude',
      'subject': 'Remercier Dieu pour les √©motions que ce passage √©veille',
      'color': const Color(0xFF2ECC71),
    };
  }
  if (tags.contains('repentance') || tags.contains('warning')) {
    return {
      'theme': 'Repentance',
      'subject': 'Me repentir selon les √©motions que ce passage √©veille',
      'color': const Color(0xFF8E44AD),
    };
  }
  if (tags.contains('trust') || tags.contains('promise')) {
    return {
      'theme': 'Foi',
      'subject': 'Renforcer ma foi selon les √©motions que ce passage √©veille',
      'color': const Color(0xFF54A0FF),
    };
  }
  return null;
}

/// Analyse "Comment l'appliquer aujourd'hui ?"
Map<String, dynamic>? _analyzeApplication(Set<String> tags, String? passageText) {
  if (tags.contains('obedience') || tags.contains('responsibility')) {
    return {
      'theme': 'Ob√©issance',
      'subject': 'Demander la force d\'appliquer ce passage dans ma vie',
      'color': const Color(0xFFF39C12),
    };
  }
  if (tags.contains('intercession')) {
    return {
      'theme': 'Intercession',
      'subject': 'Prier pour que d\'autres appliquent ce passage dans leur vie',
      'color': const Color(0xFF96CEB4),
    };
  }
  if (tags.contains('guidance')) {
    return {
      'theme': 'Sagesse',
      'subject': 'Demander la sagesse pour appliquer ce passage',
      'color': const Color(0xFF9B59B6),
    };
  }
  return null;
}
